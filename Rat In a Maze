class Solution:
    def findPath(self, m, n):
        
        res = []
        if m[0][0] == 0 or m[n-1][n-1] == 0:
            return res
            
        visited = [[0 for _ in range(n)] for _ in range(n)]
            
        def find(i, j, path, visited):
            
            if i == n-1 and j == n-1:
                res.append(path)
                return
            
            if i < 0 or j < 0 or i > n-1 or j > n-1: return
            if visited[i][j] == 1 or m[i][j] == 0: return 
            
            visited[i][j] = 1
            find(i+1, j, path+"D", visited)
            find(i-1, j, path+"U", visited)
            find(i, j+1, path+"R", visited)
            find(i, j-1, path+"L", visited)
            
            # backtracking 
            visited[i][j] = 0
            
        find(0, 0, "", visited)
        return res
