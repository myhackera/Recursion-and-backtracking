class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        
        nrow = len(board)
        ncol = len(board[0])
        
        def findWord(x, y, level):
            
            if level == len(word):
                return True
            
            if x < 0 or y < 0 or x >= nrow or y >= ncol:
                return False
            
            if board[x][y] == word[level]:
                temp = board[x][y] 
                board[x][y] = "#"
                
                res = findWord(x+1, y, level+1) or findWord(x-1, y, level+1) or findWord(x, y+1, level+1) or findWord(x, y-1, level+1)
                # Backtracking step
                board[x][y] = temp
                return res
            
            else:
                return False
                
        
        if len(word) > nrow*ncol:
            return False
        
        for i in range(nrow):
            for j in range(ncol):
                
                if board[i][j] == word[0]:
                    if findWord(i, j, 0):
                        return True
                    
        return False
