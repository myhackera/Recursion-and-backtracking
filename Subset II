class Solution:

        
    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        
        ans = []
        nums.sort()
        
        def solve(i, subset):
        
            if i == len(nums):
                ans.append(subset[::]) 
                return
            
            # variation of standard template of backtracking 
            # subset.append(nums[i])
            # solve(i+1, subset)
            # subset.pop()
            # solve(i+1, subset)
            
            subset.append(nums[i])
            solve(i+1, subset)
            subset.pop()
            
            while i + 1 < len(nums) and nums[i] == nums[i+1]:
                i += 1
                
            solve(i+1, subset)
        
        solve(0, [])
        return ans
        
        
